 这个项目是：注册中心，一张白纸：server端;注解：@EnableEurekaServer
1. 项目启动，出现链接被拒绝； Cannot execute request on any known server

配置注册的serviceUrl
  
2. 2个eureka 服务端互相注册：
实现高可用：防止一个注册中心挂了
点击Edit configuration
copy配置：
设置环境参数：一个配置为： -Dserver.port=8761

一个配置为： -Dserver.port=8762
先启动Eureka01，再启动先启动Eureka02: 发现在02上client也注册了：虽然client只在01上注册了，他会把信息同步
到另一个注册中心。


------处理不同的语言和数据库之间的差异：微服务：异构

起点：是否 将原有非microservice改为microservice架构
禁用microservice: 强事务场景；业务稳定；访问压力不大

终点：好的架构不是设计出来的，而是进化出来的

沟通结构影响设计方案

如何服务拆分？
1. 如何拆功能？---单一职责，服务之间关联度低

关注点分离：按职责，按通用性，按粒度级别

先拆分功能，再数据